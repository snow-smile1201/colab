# -*- coding: utf-8 -*-
"""pandas_editor.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1f3fkJWQci7syEPjrB8oKyf6zlee5l3pI

# pandas exercises


1. データの読み込み方法について学習します。(2問)
2. データの状態を確認する方法について学習します。（11問）
3. データの条件を指定する方法について学習します。（11問）
4. データの集計方法について学習します。（7問）
5. データの整形方法について学習します。（13問）
6. 文字列の整形について学習します。（6問）

### 0. 事前準備

#### 0.1 「pandasをpd、numpyをnpと読み込んでください。」
"""

import pandas as pd
import numpy as np

"""#### 0.2 「次のコードを実行してください。※data変数に格納してください。」"""

data = pd.DataFrame({'name': ['A', 'B', 'C', 'D'], '数学': [80, 15, 90, 50], '英語': [80, 70, 50, 65],
                    '国語': [ 90, 60, 60,  60]})

"""#### 0.3 「次のコードを実行してください。※e_data変数に格納してください。」"""

e_data = pd.DataFrame({'name':'E','国語':[30],'数学':[30],'英語':[30]})

"""#### 0.4 「次のコードを実行してください。※data_2変数に格納してください。」"""

data_2 = pd.DataFrame({'name': ['A', 'B', 'C', 'D','D'], '国語-数学': ["30:20", np.NAN, "90:50", "50:30", "50:30"], '英語': ["80.2","60.5","34,2",0,0]})

"""#### 0.5 「次のコードを実行してください。※data_3変数に格納してください。」"""

data_3 = pd.DataFrame({'name': ['A', 'B', 'C', 'D'],
                     '性別': ['男性', '男性', '女性', '男性'],
                     '経歴': ['学部卒', '修士卒', '学部卒', '博士卒'],
                     '特技': ['ボーリング', '野球', 'サッカー', '野球をやっていた']})

"""### 1. データを読み込む方法について学習します。（2問）

#### 1.1 「data変数を現在のディレクトリ配下に「a.csv」という名前で保存してください。」
"""

data.to_csv('a.csv', index=False)

from google.colab import files
files.download('a.csv')

"""#### 1.2「「a.csv」というファイルを読み込み、dataという名前の変数に格納してください。」"""

data = pd.read_csv('./a.csv')
data.tail()

"""解答：
data = pd.read_csv('./a.csv, index_col = False')

### 2.データの状態を確認する方法について学習します。（11問）

#### 2.1 「data変数のデータ形式を表示してください。」
"""

type(data)

"""#### 2.2 「pandasでSeries型データを作成して、データ形式を確認してください。※Seriesの中身は何でも良いです。」"""

list = [12, 24, 36]
series = pd.Series(data = list)
type(series)

"""#### 2.3 「pandasでDataFrame型データを作成して、データ形式を確認してください。※DataFrameの中身は何でも良いです。」"""

list = [12, 24, 36]
df = pd.DataFrame(data = list)
type(df)

"""#### 2.4 「data変数の行と列を表示してください。」"""

data.shape

"""#### 2.5 「data変数の上から2行表示してください。」"""

data[:2]
data.head(2)

"""#### 2.6 「data変数の下から3行表示してください。」"""

data.tail(3)

"""#### 2.7 「data変数のカラムを表示してください。」"""

data.columns

"""#### 2.8 「data変数のインデックスを表示してください。」"""

data.index

"""#### 2.9 「data変数の各カラムのdata型を表示してください。」"""

data.dtypes

"""#### 2.10 「data変数の各カラムのユニーク数を表示してください。」"""

data.nunique()

"""#### 2.11 「data変数の各インデックスのユニーク数を表示してください。」"""

data.nunique(axis=1)

"""*(axis =1)でインデックスに沿ってデータを取得していく。デフォルトはaxis = 0(カラムの方向)

### 3.データの条件を指定する方法について学習します。（11問）

#### 3.1 「data変数の上から4行目のデータを表示してください。」
"""

data.loc[3,:]

"""#### 3.2 「data変数の中で国語が70点以上の人を表示してください。」"""

data[data.国語 >= 70]

"""解答：data[data['国語']　>= 70]

#### 3.3 「data変数の中で数学が30点未満の人を表示してください。」
"""

data[data.数学 < 30]

"""解答：data[data['数学'] < 30]

#### 3.4 「data変数の中で国語が60点ピッタリの人が何人いるか表示してください。」
"""

japanese = data['国語']
japanese_bool = japanese == 60
japanese_bool.sum()

"""解答：len(data[data['国語'] == 60])
len関数で国語カラムの中で値が60に等しいデータの個数を表している。<br>
len関数をシリーズ型のデータに対して使うと要素数を取得することができる。

#### 3.5 「data変数の中で数学が50点以上の人が何人いるか表示してください。」
"""

math = data['数学']
math_bool = math >= 50
math_bool.sum()

"""解答：len(data[data['数学'] >= 50])

#### 3.6「data変数の中で国語の点数が1番高い人を表示してください。」
"""

japanese_max = data['国語'].idxmax()
data.loc[japanese_max, :]

"""★解答:data[data['国語'] == data['国語'].max()]['name']<br>
国語カラムの中からmax値と等しいインデックスの名前を表示させている

#### 3.7 「data変数の中で全ての人の国語の点数を表示してください。」
"""

data['国語']

"""#### 3.8 「data変数の中で全ての人の国語と数学の点数を表示してください。」"""

data[['国語', '数学']]

"""#### 3.9 「data変数のカラムの情報を確認してください。」"""

data.info()

"""#### 3.10 「data変数の中で2行目と3行目のみ表示してください。(indexは0番目が1行目であることに注意)」"""

data.loc[1:2]

"""#### 3.11 「data変数の中で2行目と3行目且つ0列目と1列目を表示してください。(indexは0番目が1行目であることに注意)」"""

data.iloc[1:3, 0:2]

"""### 4. データの集計方法について学習します。（7問）

#### 4.1 「dataの下にe_dataを連結させて下さい。dataの中身を確認してください。」
"""

data = pd.concat([data,e_data],axis=0,sort=True)
data

"""#### 4.2 「dataのindexを振り直してください。」"""

data = data.reset_index(drop=True)

"""解答：data = data.reset_index()<br>
data.drop(['index'],axis=1,inplace=True)<br>
解答ではdrop=Trueではなくinplace=Trueを使っている。

#### 4.3 「dataの各カラムの合計値を表示して下さい。」
"""

data.sum()

"""#### 4.4 「dataの各行の合計値を表示して下さい。」"""

data.sum(axis=1)

"""#### 4.5 「dataの各行の平均値を表示して下さい。」"""

data.mean(axis=1)

"""#### 4.6 「data変数のカラムの統計量を算出してください。（小数点第1桁まで）」"""

pd.options.display.float_format = '{:.1f}'.format
data.describe()

"""★解答：data.describe().round(1)<br>
round()を使用することで小数点の桁数を指定できる。

#### 4.7 「data変数の中の各カラムの相関係数を算出してください。」
"""

data.corr()

"""### 5. データの整形方法について学習します。（13問）

#### 5.1 「data変数の数学カラムのユニーク値を表示してください。」
"""

data['数学'].unique()

"""#### 5.2 「data変数の中で数学カラムの中に重複がないことを確認してください。（等式を作成してください。）」"""

data['数学'].duplicated().any()

"""★データの要素数と数学カラムのユニーク値の個数を比較することで、重複の確認をしている。<br>
len(data) == len(data['数学'].unique())

#### 5.3 「data変数の中で国語カラムの中に重複があることを確認してください。（等式を作成してください。）」
"""

data['国語'].duplicated().any()

"""上記問題と同じ考え方

#### 5.4 「data変数の中で国語の点数が60点の人が3人います。重複レコードを削除してください。」
"""

data.drop_duplicates(subset=['国語'])

"""★解答ではsubsetの指定をせず実現している。<br>
data[~data['国語'].duplicated()]

#### 5.5 「data_2を表示して下さい。」
"""

data_2.tail()

"""#### 5.6 「名前の行に重複が見られます。その行を削除してください。」"""

data_2 = data_2.drop_duplicates(subset=['name'])

"""#### 5.7 「国語-数学の列を国語と数学に分けた列を作成してください。」"""

df_concat = pd.concat([data_2, data_2['国語-数学'].str.split(":", expand=True)], axis=1)
df_rename = df_concat.rename(columns={0 : '国語', 1 : '数学'})
data_2 = df_rename

"""#### 5.8 「name、英語、国語、数学以外の列を削除してください。」"""

data_2 = data_2.drop(['国語-数学'], axis=1)

"""#### 5.9 「Cの英語の点数にカンマが入っています。小数点になおしてください。」"""

data_2 = data_2.replace('34,2', '34.2')

"""#### 5.10 「data_2の各列の型(クラス、数字や文字列などの情報)を表示して下さい。」"""

data_2.dtypes

"""#### 5.11 「英語、国語、数学を数値型に変更し、データ型が変換されたことを確認してください。」"""

data_2[['英語','国語','数学']] = data_2[['英語','国語','数学']].astype(float)
data_2.dtypes

"""#### 5.12 「欠損値がある行を表示して下さい。」"""

data_2.loc[data_2.isnull().any( axis = 1), :]

"""#### 5.13 「欠損をもつ行を取り除いて下さい。」"""

data_2.dropna()

"""### 6.文字列の処理（6問）

#### 6.1 「data_3を確認して下さい。」
"""

data_3

"""#### 6.2 「経歴が、'学部卒'で終わる行を表示して下さい。」"""

data_3[data_3['経歴'].str.endswith('学部卒')]

"""#### 6.3 「性別が、'女'から始まる行を表示して下さい。」"""

data_3[data_3['性別'].str.startswith('女')]

"""#### 6.4 「特技が'野球'を含む行を表示して下さい。」"""

data_3[data_3['特技'].str.contains('野球')]

"""#### 6.5 「経歴の'卒'を削除して下さい。」"""

data_3['経歴'] = data_3['経歴'].str[0:2]
data_3

"""#### 6.6 「特技の'野球をやっていた'の「をやっていた」を削除して下さい。」"""

data_3['特技'][3] = data_3['特技'][3].strip('をやっていた')
data_3

