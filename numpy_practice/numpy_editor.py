# -*- coding: utf-8 -*-
"""numpy_editor.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1AccgR3xvKoDCC4A2k3C_SBgRUdpRpNzA

# numpy exercises


1. データの状態を確認する方法について学習します。（3問）
2. 配列について学習します。（4問）
3. スライスについて学習します。（5問）
4. 行列について学習します。（基礎）（6問）
5. 行列について学習します。（応用）（7問）
6. numpyでよく使う機能について学習します。（14問）

### 0. 事前準備

#### 0.1 「numpyを読み込んでください。」
"""

import numpy as np

"""#### 0.2 「以下のコードを読み込んでください。」"""

a = np.arange(15).reshape(3, 5)
a

"""### 1. データの状態を確認する方法について学習します。（4問）

#### 1.1 「行列の大きさを確認してください。」
"""

a.shape

"""#### 1.2 「行列の軸数（次元）を確認してください。」"""

a.ndim

"""#### 1.3 「行列のデータ型を確認してください。」"""

a.dtype

"""### 2. 配列について学習します。（4問）

#### 2.1 「8つの「0」が入る配列を作成してください。」
"""

np.zeros(8)

"""#### 2.2 「8つの「0」が入る配列を作成し、5番目の値を「1」に変えてください。」"""

data = np.zeros(8)
data[4] =1
data

"""#### 2.3 「10～49までの数字が昇順で入った配列を作成してください。」"""

np.arange(10,50)

"""#### 2.4 「0～39までの数字が降順で入った配列を作成してください。」"""

data = np.arange(40)
data = data[::-1]
data

"""### 3. スライスについて学習します。（5問）

#### 3.1 「0~9までの数字が入った配列を作成してください。」
"""

data= np.arange(10)
data

"""#### 3.2 「スライス（:）を使用して、3.1で作成した配列から、numpy_view.ipynbの設問3.2の結果となるように配列を取り出して下さい。」"""

data[4:8]

"""#### 3.3 「スライス（:）を使用して、3.1で作成した配列から「マイナス」を使用して下記の配列を取り出して下さい。」"""

data[-7:-2]

"""#### 3.4 「スライス（:）を使用して、3.1で作成した配列から「マイナス」を使用して下記の配列を取り出して下さい。」"""

data[::-1]

"""#### 3.5 「スライス（:）を使用して、3.1で作成した配列から下記の配列を取り出して下さい。」"""

data[2:8:2]

"""### 4. 行列について学習します（基礎）（6問）

#### 4.1 「0～8までの数字が昇順で入った配列を作成し、3×3の行列を作成してください。」
"""

data = np.arange(9).reshape(3,3)
print(data)

"""#### 4.2 「任意の「0」が入っている配列を作成し、「0」以外が入っているインデックスを取得してください。」"""

z_data = np.nonzero([1,1,0,0,2,2,0,3,3])
z_data

"""#### 4.3 「3×3の正方行列を作成してください。」"""

data = np.eye(3)
data

"""#### 4.4 「3×3×3のランダム値を持つ行列を作成してください。」"""

data = np.random.random((3,3,3))
data

"""#### 4.5 「10×10のランダム値を持つ行列を作成し、最小値と最大値を出力してください。」"""

np.random.random((10,10))
datamin, datamax = data.min(), data.max()
datamin, datamax

"""#### 4.6 「10×10のランダム値を持つ行列を作成し、平均値を出力してください。」"""

data = np.random.random((10,10))
data.mean()

"""### 5. 行列について学習します（応用）（7問）

#### 5.1 「10×10の大きさの、外側だけ値が「1」、内側が全て値が「0」の行列を作成してください。」
"""

data = np.ones((10,10))
data[1:-1,1:-1] = 0
print(data)

"""#### 5.2 「10×10の大きさの、外側だけ値が「0」、内側が全て値が「1」の行列を作成してください。」"""

data = np.zeros((10,10))
data[1:-1, 1:-1] = 1
print(data)

"""#### 5.3「下記のような4×4の対角行列を作成してください。」"""

data = np.diag(1+np.arange(4),k=0)
print(data)

"""#### 5.4 「下記のような8×8の行列を作成してください。」"""

data = np.zeros((8,8),dtype=int)
data[1::2,::2] = 1
data[::2,1::2] = 1
data

"""#### 5.5「3×5×2の行列を考えた時に、10番目の要素のインデックスを出力してください。」"""

print(np.unravel_index(10,(3,5,2)))

"""#### 5.6「5×5のランダム値を持つ行列を作成し、行列内の最大値が1、最小値が0になるように正規化してください。」"""

data = np.random.random((5,5))
datamax, datamin = data.max(), data.min()
data = (data - datamin)/(datamax - datamin)
print(data)

"""#### 5.7「5×3の値が全て1の行列と3×2の値が全て1の行列の掛け算を行ってください。」"""

data = np.dot(np.ones((5,3)), np.ones((3,2)))
print(data)

"""### 6. numpyでよく使用する機能について学習します。（14問）

#### 6.1「0～10までの数字を昇順に並べた配列を作成し、4～8までの数字をマイナスに変えて出力してください。」
"""

data = np.arange(11)
data[(3 < data) & (data <= 8)] *= -1
data

"""#### 6.2「ランダムな整数値を10個もつ配列を2つ作成し、その2つの配列の共通の値を出力してください。」"""

data1 = np.random.randint(0,10,10)
data2 = np.random.randint(0,10,10)
print(np.intersect1d(data1,data2))

"""#### 6.3「虚数を出力してください。」"""

np.emath.sqrt(-1)

"""#### 6.4「今日の日付と明後日の日付を出力してください。」"""

today     = np.datetime64('today', 'D')
day_after_tomorrow  = np.datetime64('today', 'D') + np.timedelta64(2, 'D')
print(today)
print(day_after_tomorrow)

"""#### 6.5「2019年11月の日付を配列として出力してください。」"""

data = np.arange('2019-11', '2019-12', dtype='datetime64[D]')
print(data)

"""#### 6.6「ランダムの値を10個持つ配列を作成し、異なる3パターンで整数として出力してください。」"""

data = np.random.uniform(0,10,10)
print(data)
print (data - data%1)
print (np.floor(data))
print (np.ceil(data)-1)

"""#### 6.7「下記のような行列を作成してください。」"""

data = np.zeros((5,5))
data += np.arange(5)
print(data)

"""#### 6.8「「0」と「1」は含めず、「0」～「1」の間を10分割した配列を作成してください。」"""

data = np.linspace(0,1,11,endpoint=False)[1:]
print(data)

"""#### 6.9「10のランダム値を持つ配列を作成し、値を昇順にして出力してください。」"""

data = np.random.random(10)
data.sort()
print(data)

"""#### 6.10「10のランダム値を持つ配列を作成し、MAX値に「0」を置き換えて出力してください。」"""

data = np.random.random(10)
data[data.argmax()] = 0
print(data)

"""#### 6.11「下記のような値が軸単位で昇順になっている行列を作成してください。」"""

data = np.zeros((5,5), [('x',float),('y',float)])
data['x'], data['y'] = np.meshgrid(np.linspace(0,1,5),
                             np.linspace(0,1,5))
print(data)

"""#### 6.12「3×3の値が昇順になっている行列を作成し、インデックスと値を出力してください。」"""

data = np.arange(9).reshape(3,3)
for index, value in np.ndenumerate(data):
    print(index, value)

"""#### 6.13「10×10の「0」行列を作成し、ランダムで20個「1」に変更してください。」"""

n = 10
p = 20
data = np.zeros((n,n))
np.put(data, np.random.choice(range(n*n), p, replace=False),1)
print(data)

"""#### 6.14「100の整数のランダム要素を持つ配列を作成し、その頻度を出力してください。」"""

data = np.random.randint(0,100,100)
F = np.bincount(data)
print(F)